module.exports = grammar({
  name: 'LC2200',
  rules: {
    source_file: $ => repeat($._statement),

    _statement: $ => choice(
      $._label,
      $.instr,
      $.comment,
    ),

    idlabel: _ => /[a-zA-Z]\w*/,
    _label: $ => seq(
      $.idlabel,
      ":"
    ),
    comment: _ => /!.*/,
    reg: _ => choice(
      "$zero",
      "$at",
      "$v0",
      "$a0",
      "$a1",
      "$a2",
      "$t0",
      "$t1",
      "$t2",
      "$s0",
      "$s1",
      "$s2",
      "$k0",
      "$sp",
      "$fp",
      "$ra",
    ),
    num: _ => /(0x[0-9a-fA-F]+|-?\d+)/,
    offreg: $ => seq(
      $.num,
      "(",
      $.reg,
      ")",
    ),
    _offset: $ => choice(
      $.num,
      $.idlabel,
    ),
    instr: $ => choice(
      seq("add",
        $.reg, ",",
        $.reg, ",",
        $.reg,
      ),
      seq("nand",
        $.reg, ",",
        $.reg, ",",
        $.reg,
      ),
      seq("addi",
        $.reg, ",",
        $.reg, ",",
        $.num,
      ),
      seq("lw",
        $.reg, ",",
        $.offreg,
      ),
      seq("sw",
        $.reg, ",",
        $.offreg,
      ),
      seq("beq",
        $.reg, ",",
        $.reg, ",",
        $._offset,
      ),
      seq("jalr",
        $.reg, ",",
        $.reg,
      ),
      seq("halt",
      ),
      seq("blt",
        $.reg, ",",
        $.reg, ",",
        $._offset,
      ),
      seq("lea",
        $.reg, ",",
        $._offset,
      ),
      seq("bgt",
        $.reg, ",",
        $.reg, ",",
        $._offset,
      ),
      seq("or",
        $.reg, ",",
        $.reg, ",",
        $.reg,
      ),
      seq("xor",
        $.reg, ",",
        $.reg, ",",
        $.reg,
      ),
      seq(".word",
        $.num
      ),
      seq(".fill",
        $.num
      )
    ),
  }
})
